#!/usr/bin/env bash
set -euo pipefail

# ------------------------------------------------------------
# LLVM multi-version sources for Ubuntu & Debian using apt.llvm.org
# - Detects distro/codename
# - Probes apt.llvm.org and adds only suites that exist
# - Installs GPG key in /etc/apt/keyrings (signed-by)
# - Writes deb + deb-src entries, then runs apt-get update
# - Prompts for confirmation (use -y to auto-confirm)
# ------------------------------------------------------------

ASSUME_YES=false

usage() {
  cat <<'EOF'
Usage: setup-llvm-apt.sh [-y]

Adds all available LLVM apt sources for your Ubuntu/Debian release
from apt.llvm.org (deb + deb-src), with proper signed-by keyring.

Options:
  -y   Assume "yes" to all prompts (non-interactive).
  -h   Show this help.
EOF
}

while getopts ":yh" opt; do
  case "$opt" in
    y) ASSUME_YES=true ;;
    h) usage; exit 0 ;;
    \?) echo "Unknown option: -$OPTARG" >&2; usage; exit 2 ;;
  esac
done

if [[ $EUID -ne 0 ]]; then
  echo "This script must be run as root (use sudo)." >&2
  exit 1
fi

# Detect distro / codename
if [[ -r /etc/os-release ]]; then
  # shellcheck disable=SC1091
  . /etc/os-release
else
  echo "Cannot read /etc/os-release to detect OS." >&2
  exit 1
fi
DISTRO_ID="${ID:-}"
CODENAME="${VERSION_CODENAME:-}"
if [[ -z "$CODENAME" ]] && command -v lsb_release >/dev/null 2>&1; then
  CODENAME="$(lsb_release -sc || true)"
fi
case "$DISTRO_ID" in
  ubuntu|debian) : ;;
  *) echo "Only Ubuntu and Debian are supported (detected: $DISTRO_ID)." >&2; exit 1 ;;
esac
if [[ -z "$CODENAME" ]]; then
  echo "Unable to detect distro codename." >&2
  exit 1
fi

# Paths / constants
readonly APT_LLVM_HOST="https://apt.llvm.org"
readonly KEY_URL="${APT_LLVM_HOST}/llvm-snapshot.gpg.key"
readonly KEYRING_DIR="/etc/apt/keyrings"
readonly KEYRING_PATH="${KEYRING_DIR}/llvm-archive-keyring.gpg"
readonly SOURCES_DIR="/etc/apt/sources.list.d"
readonly SOURCES_FILE="${SOURCES_DIR}/llvm-toolchain.list"

# Candidate LLVM major versions to probe (broad range)
CANDIDATE_VERSIONS=(3.9 4.0 5 6.0 7 8 9 10 11 12 13 14 15 16 17 18 19 20)

# Probe helper: check if suite exists for this codename
suite_exists() {
  local suite="$1"
  local url="${APT_LLVM_HOST}/${CODENAME}/dists/${suite}/Release"
  curl -fsIL "$url" >/dev/null 2>&1
}

# Build list of suites to add
declare -a suites_to_add=()
if suite_exists "llvm-toolchain-${CODENAME}"; then
  suites_to_add+=("llvm-toolchain-${CODENAME}")
fi
for ver in "${CANDIDATE_VERSIONS[@]}"; do
  if suite_exists "llvm-toolchain-${CODENAME}-${ver}"; then
    suites_to_add+=("llvm-toolchain-${CODENAME}-${ver}")
  fi
done

if [[ ${#suites_to_add[@]} -eq 0 ]]; then
  echo "No LLVM suites found for '${CODENAME}' at ${APT_LLVM_HOST}." >&2
  exit 1
fi

echo "Detected OS:       ${DISTRO_ID}"
echo "Detected codename: ${CODENAME}"
echo "LLVM suites to add:"
for s in "${suites_to_add[@]}"; do echo "  - ${s}"; done
echo

if ! $ASSUME_YES; then
  read -r -p "Proceed with configuring LLVM sources? [y/N]: " confirm
  case "$confirm" in
    [yY][eE][sS]|[yY]) : ;;
    *) echo "Aborted."; exit 0 ;;
  esac
fi

# Ensure dirs
install -d -m 0755 "${KEYRING_DIR}"
install -d -m 0755 "${SOURCES_DIR}"

# Install GPG key (dearmored)
tmpkey="$(mktemp)"
trap 'rm -f "$tmpkey" "${KEYRING_PATH}.tmp"' EXIT
curl -fsSL "${KEY_URL}" -o "${tmpkey}"
gpg --dearmor < "${tmpkey}" > "${KEYRING_PATH}.tmp"
chmod 0644 "${KEYRING_PATH}.tmp"
mv "${KEYRING_PATH}.tmp" "${KEYRING_PATH}"

# Backup existing sources file if present
if [[ -f "${SOURCES_FILE}" ]]; then
  cp -a "${SOURCES_FILE}" "${SOURCES_FILE}.bak.$(date +%Y%m%d-%H%M%S)"
fi

# Write sources list (deb + deb-src)
{
  echo "# LLVM apt sources for ${DISTRO_ID} ${CODENAME} â€” generated by setup-llvm-apt.sh"
  echo "# See: https://apt.llvm.org/"
  echo
  for suite in "${suites_to_add[@]}"; do
    echo "deb [signed-by=${KEYRING_PATH}] ${APT_LLVM_HOST}/${CODENAME}/ ${suite} main"
    echo "deb-src [signed-by=${KEYRING_PATH}] ${APT_LLVM_HOST}/${CODENAME}/ ${suite} main"
  done
} > "${SOURCES_FILE}"
chmod 0644 "${SOURCES_FILE}"

# Update
apt-get update
echo "LLVM sources configured."
