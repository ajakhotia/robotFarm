name: External library build

on:
  workflow_run:
    workflows: ["Base image build"]
    types: [completed]


jobs:
  externalLibraryBuild:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        os_base:
          - ubuntu:22.04
          - ubuntu:24.04
        toolchain:
          - linux-clang-16
          - linux-clang-19
          - linux-gnu-12
          - linux-gnu-14
        exclude:
          - os_base: "ubuntu:22.04"
            toolchain: linux-clang-19
          - os_base: "ubuntu:22.04"
            toolchain: linux-gnu-14
          - os_base: "ubuntu:24.04"
            toolchain: linux-clang-16
          - os_base: "ubuntu:24.04"
            toolchain: linux-gnu-12
        build_list:
          - AtlasExternalProject
          - BoostExternalProject
          - CapnprotoExternalProject
          - CeresSolverExternalProject
          - Eigen3ExternalProject
          - FlatBuffersExternalProject
          - GFlagsExternalProject
          - GlogExternalProject
          - GoogleTestExternalProject
          - NlohmannJsonExternalProject
          - OatppExternalProject
          - OatppWebSocketExternalProject
          - OgreExternalProject
          - OpenCVExternalProject
          - ProtobufExternalProject
          - Python3ExternalProject
          - SpdLogExternalProject
          - SuiteSparseExternalProject
          - VTKExternalProject

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Setup buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Normalize names
        run: |
          echo "REPOSITORY_NORMALIZED_NAME=$(echo '${{ github.repository }}' | sed -E 's/([a-z0-9])([A-Z])/\1-\L\2/g'  | tr '[:upper:]' '[:lower:]'  | sed -E 's/[^a-z0-9/]+/-/g')" >> $GITHUB_ENV
          echo "OS_BASE_NORMALIZED_NAME=$(echo '${{ matrix.os_base }}' | sed -E 's/([a-z0-9])([A-Z])/\1-\L\2/g'  | tr '[:upper:]' '[:lower:]'  | sed -E 's/[^a-z0-9/]+/-/g')" >> $GITHUB_ENV

      - name: Build ${{ matrix.build_list }} on ${{ matrix.os_base }} with ${{ matrix.toolchain }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/robotFarm-ubuntu.dockerfile
          target: throwaway-robot-farm-build
          push: false
          cache-from: type=registry,mode=max,ref=ghcr.io/${{ env.REPOSITORY_NORMALIZED_NAME }}-${{ env.OS_BASE_NORMALIZED_NAME }}:buildcache
          cache-to: type=registry,mode=max,ref=ghcr.io/${{ env.REPOSITORY_NORMALIZED_NAME }}-${{ env.OS_BASE_NORMALIZED_NAME }}:buildcache
          build-args: |
            BUILD_LIST=${{ matrix.build_list }}
            BASE_IMAGE=${{ matrix.os_base }}
            TOOLCHAIN=${{ matrix.toolchain }}
