name: docker-image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    branches:
      - main

jobs:
  base-stage:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os_base:
          - ubuntu:22.04
          - ubuntu:24.04

    steps:
      - name: base
        uses: ajakhotia/infraCommons/.github/actions/docker-typical-build-push@main
        with:
          dockerfile: docker/ubuntu.dockerfile
          password: ${{ secrets.GITHUB_TOKEN }}
          target-stage: base
          target-stage-id: base
          build-name: ${{ matrix.os_base }}
          build-args: |
            OS_BASE=${{ matrix.os_base }}


  build-deploy-stages:
    needs: base-stage
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        os_base:
          - ubuntu:22.04
          - ubuntu:24.04
        toolchain:
          - linux-clang-19
          - linux-gnu-14
          - linux-gnu-default
        exclude:
          - os_base: "ubuntu:22.04"
            toolchain: linux-gnu-14

    steps:
      - name: build
        uses: ajakhotia/infraCommons/.github/actions/docker-typical-build-push@main
        with:
          dockerfile: docker/ubuntu.dockerfile
          password: ${{ secrets.GITHUB_TOKEN }}
          target-stage: build
          target-stage-id: build
          build-name: ${{ matrix.os_base }}/${{ matrix.toolchain }}
          build-args: |
            OS_BASE=${{ matrix.os_base }}
            TOOLCHAIN=${{ matrix.toolchain }}

      - name: deploy
        uses: ajakhotia/infraCommons/.github/actions/docker-typical-build-push@main
        with:
          dockerfile: docker/ubuntu.dockerfile
          password: ${{ secrets.GITHUB_TOKEN }}
          target-stage: deploy
          target-stage-id: deploy
          upstream-stage-id: build
          build-name: ${{ matrix.os_base }}/${{ matrix.toolchain }}
          build-args: |
            OS_BASE=${{ matrix.os_base }}
            TOOLCHAIN=${{ matrix.toolchain }}

  find-libraries:
    needs: build-deploy-stages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os_base:
          - ubuntu:22.04
          - ubuntu:24.04
        toolchain:
          - linux-clang-19
          - linux-gnu-14
          - linux-gnu-default
        exclude:
          - os_base: "ubuntu:22.04"
            toolchain: linux-gnu-14
        library-name:
          - absl
          - AMD
          - Boost
          - CAMD
          - CapnProto
          - CCOLAMD
          - Ceres
          - CHOLMOD
          - COLAMD
          - Eigen3
          - flatbuffers
          - Gflags
          - Glog
          - GTest
          - nlohmann_json
          - oatpp
          - oatpp-websocket
          - OGRE
          - OpenCV
          - protobuf
          - Python3
          - spdlog
          - SPQR
          - SuiteSparse_config
          - VTK

    steps:
      - name: find-library
        uses: ajakhotia/infraCommons/.github/actions/cmake-find-package@main
        with:
          library-name: ${{ matrix.library-name }}
          prefix-path: "/opt/robotFarm"
          image-name: |
            ${{ format('{0}/{1}/{2}', github.repository, matrix.os_base, matrix.toolchain )}}
          password: ${{ secrets.GITHUB_TOKEN }}
