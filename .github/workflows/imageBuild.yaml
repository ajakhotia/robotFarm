name: imageBuild

on:
  workflow_run:
    workflows: [ "baseImageBuild" ]
    types: [ completed ]

jobs:
  imageBuild:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        os_base:
          - ubuntu:22.04
          - ubuntu:24.04
        toolchain:
          - linux-clang-19
          - linux-gnu-12
          - linux-gnu-14
        exclude:
          - os_base: "ubuntu:22.04"
            toolchain: linux-gnu-14
          - os_base: "ubuntu:24.04"
            toolchain: linux-gnu-12

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: setupBuildX
        uses: docker/setup-buildx-action@v3

      - name: setupLogin
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: normalizeNames
        run: |
          echo "REPOSITORY_NORMALIZED_NAME=$(echo '${{ github.repository }}' | sed -E 's/([a-z0-9])([A-Z])/\1-\L\2/g' | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9/]+/-/g')" >> $GITHUB_ENV
          echo "OS_BASE_NORMALIZED_NAME=$(echo '${{ matrix.os_base }}' | sed -E 's/([a-z0-9])([A-Z])/\1-\L\2/g' | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9/]+/-/g')" >> $GITHUB_ENV

      - name: dockerMetadata
        id: dockerMetadata
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.REPOSITORY_NORMALIZED_NAME }}-${{ env.OS_BASE_NORMALIZED_NAME }}-${{ matrix.toolchain }}
          tags: |
            type=raw,value=${{ github.event.workflow_run.head_sha }}
            type=raw,value=latest,enable=${{ github.event.workflow_run.head_branch == 'main' }}

      - name: buildRobotFarm
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/robotFarm-ubuntu.dockerfile
          target: robot-farm
          push: true
          tags: ${{ steps.dockerMetadata.outputs.tags }}
          labels: ${{ steps.dockerMetadata.outputs.labels }}
          cache-from: type=registry,mode=max,ref=ghcr.io/${{ env.REPOSITORY_NORMALIZED_NAME }}-${{ env.OS_BASE_NORMALIZED_NAME }}:buildcache
          cache-to: type=registry,mode=max,ref=ghcr.io/${{ env.REPOSITORY_NORMALIZED_NAME }}-${{ env.OS_BASE_NORMALIZED_NAME }}:buildcache
          build-args: |
            BASE_IMAGE=${{ matrix.os_base }}
            TOOLCHAIN=${{ matrix.toolchain }}
